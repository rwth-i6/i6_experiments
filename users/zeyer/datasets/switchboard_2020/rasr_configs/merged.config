[*.lexicon]
#file				= ...

normalize-pronunciation         = false

[*.allophones]
add-from-lexicon            = false
add-all                     = true

# ---------------------------------------------------------------------------
[*]
encoding						= utf-8
system-info.channel     		= log-channel
configuration.channel   		= log-channel
log.channel						= log-channel
warning.channel					= log-channel, stderr
error.channel					= log-channel, stderr
progress.channel      			= log-channel
statistics.channel				= log-channel
progress-indication = global


# ---------------------------------------------------------------------------

[*.hmm]
states-per-phone        		= 3
state-repetitions       		= 1
across-word-model       		= yes

[*.tdp]
scale							= 1.0
*.loop							= 1.0
*.forward						= 0.0
*.skip							= infinity
*.exit							= 20
entry-m1.loop					= infinity
entry-m2.loop					= infinity
silence.loop                    = 0.0
silence.forward                 = 1.0
silence.skip                    = infinity

[*.corpus]
#file					= ...
#segments.file			= ...

warn-about-unexpected-elements          = no
capitalize-transcriptions               = no

#segments-to-skip			=
#include .../shared/config/segments-to-skip.config


# ---------------------------------------------------------------------------
[*.feature-extraction]
#file					= .../base.cache.flow

[*.feature-extraction.base-feature-extraction]
file					= generic-cache
path					= $(feature-cache-path)
read-only				= true


# ---------------------------------------------------------------------------
[*]
task-id                     = 1

#### logchannel setzen
log-resolved-resources      = true
#log-configuration          = true
dump-attributes             = true

# ---------------------------------------------------------------------------
[*]
*.label-type                = emission-index

#*.buffer-size               = 15000000 #15305756
#*.batch-size                = 512
*.window-size               = 1 # 17
*.window-size-derivatives   = 0 # 13 = no derivatives
*.shuffle                   = true

# ./sprint-executables/allophone-tool --\*.load-state-tying=true --\*.state-tying.type=decision-tree  --\*.state-tying.file=dependencies/cart.tree.xml --\*.lexicon.file=/work/asr2/quaero/en/training/quaero-train11/s4.mfcc.newG2p/shared/lexicon/train.final.lex.gz --\*.dump-state-tying.channel=foo

#*.disregard-classes         = 278,279,280 # mul states (cart dependent)


# ---------------------------------------------------------------------------
[*]
job-name                    = train
use-cuda					= false # This is for Sprint only.
seed						= 1  # Default.
log-channel.file			= log/sprint-train

# ---------------------------------------------------------------------------
[*]
action                      = python-control
python-control-enabled      = true
python-control-loop-type    = iterate-corpus


# For PythonControl
extract-alignments			= false


corpus.segment-order-shuffle = true

python-segment-order		= true
python-segment-order-pymod-path = .
python-segment-order-pymod-name = returnn.SprintInterface
use-data-source			= false

# Python trainer config
pymod-path					= .
pymod-name					= returnn.SprintInterface
